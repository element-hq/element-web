name: Webapp Release

on:
    release:
        types: [published]
        branches:
            - vd-development

permissions:
    contents: read
    packages: write

jobs:
    build-and-deploy:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  ref: ${{ github.ref }}

            - name: Set up SSH key for GitHub
              run: |
                  mkdir -p ~/.ssh
                  echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
                  chmod 600 ~/.ssh/id_rsa
                  ssh-keyscan github.com >> ~/.ssh/known_hosts

            - name: Install dependencies
              run: |
                  yarn install --ignore-scripts

            - name: Create certificates directory
              run: |
                  mkdir -p certificates

            - name: Write SSL certificates
              run: |
                  echo "${{ secrets.SSL_CA_BUNDLE }}" > certificates/ca_bundle.crt
                  echo "${{ secrets.SSL_CERTIFICATE }}" > certificates/certificate.crt
                  echo "${{ secrets.SSL_PRIVATE_KEY }}" > certificates/private.key

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GHCR_TOKEN }}

            - name: Build and push Docker image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  file: Dockerfile.webapp
                  push: true
                  tags: |
                      ghcr.io/voyzme/web-client/voicedrop-web:${{ github.event.release.tag_name }}
                  cache-from: type=registry,ref=ghcr.io/voyzme/web-client/voicedrop-web:${{ github.event.release.tag_name }}
                  cache-to: type=inline

            - name: Install Terraform
              uses: hashicorp/setup-terraform@v2
              with:
                  terraform_version: "1.3.0"

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v2
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
                  aws-region: eu-central-1

            - name: Deploy with Terraform
              run: |
                  cd terraform
                  terraform init
                  terraform destroy -auto-approve \
                  -var "github_token=${{ secrets.GHCR_TOKEN }}" \
                    -var "environment=Dev" \
                    -var "release_tag=${{ github.event.release.tag_name }}"
                  terraform apply -auto-approve \
                    -var "github_token=${{ secrets.GHCR_TOKEN }}" \
                    -var "environment=Dev" \
                    -var "release_tag=${{ github.event.release.tag_name }}"
