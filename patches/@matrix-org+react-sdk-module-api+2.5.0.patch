diff --git a/node_modules/@matrix-org/react-sdk-module-api/lib/ModuleApi.d.ts b/node_modules/@matrix-org/react-sdk-module-api/lib/ModuleApi.d.ts
index 917a7fc..a2710c6 100644
--- a/node_modules/@matrix-org/react-sdk-module-api/lib/ModuleApi.d.ts
+++ b/node_modules/@matrix-org/react-sdk-module-api/lib/ModuleApi.d.ts
@@ -37,7 +37,7 @@ export interface ModuleApi {
      * @returns Whether the user submitted the dialog or closed it, and the model returned by the
      * dialog component if submitted.
      */
-    openDialog<M extends object, P extends DialogProps = DialogProps, C extends DialogContent<P> = DialogContent<P>>(initialTitleOrOptions: string | ModuleUiDialogOptions, body: (props: P, ref: React.RefObject<C>) => React.ReactNode, props?: Omit<P, keyof DialogProps>): Promise<{
+    openDialog<M extends object, P extends DialogProps = DialogProps, C extends DialogContent<P> = DialogContent<P>>(initialTitleOrOptions: string | ModuleUiDialogOptions, body: (props: P, ref: React.RefObject<C | null>) => React.ReactNode, props?: Omit<P, keyof DialogProps>): Promise<{
         didOkOrSubmit: boolean;
         model: M;
     }>;
diff --git a/node_modules/@matrix-org/react-sdk-module-api/lib/lifecycles/CryptoSetupExtensions.d.ts b/node_modules/@matrix-org/react-sdk-module-api/lib/lifecycles/CryptoSetupExtensions.d.ts
index cb5f2e5..51daa51 100644
--- a/node_modules/@matrix-org/react-sdk-module-api/lib/lifecycles/CryptoSetupExtensions.d.ts
+++ b/node_modules/@matrix-org/react-sdk-module-api/lib/lifecycles/CryptoSetupExtensions.d.ts
@@ -66,23 +66,23 @@ export interface SetupEncryptionStoreProjection {
 export interface ProvideCryptoSetupExtensions {
     examineLoginResponse(response: any, credentials: ExtendedMatrixClientCreds): void;
     persistCredentials(credentials: ExtendedMatrixClientCreds): void;
-    getSecretStorageKey(): Uint8Array | null;
-    createSecretStorageKey(): Uint8Array | null;
+    getSecretStorageKey(): Uint8Array<ArrayBuffer> | null;
+    createSecretStorageKey(): Uint8Array<ArrayBuffer> | null;
     catchAccessSecretStorageError(e: Error): void;
     setupEncryptionNeeded: (args: CryptoSetupArgs) => boolean;
     /** @deprecated This callback is no longer used by matrix-react-sdk */
-    getDehydrationKeyCallback(): ((keyInfo: SecretStorageKeyDescription, checkFunc: (key: Uint8Array) => void) => Promise<Uint8Array>) | null;
+    getDehydrationKeyCallback(): ((keyInfo: SecretStorageKeyDescription, checkFunc: (key: Uint8Array<ArrayBuffer>) => void) => Promise<Uint8Array<ArrayBuffer>>) | null;
     SHOW_ENCRYPTION_SETUP_UI: boolean;
 }
 export declare abstract class CryptoSetupExtensionsBase implements ProvideCryptoSetupExtensions {
     abstract examineLoginResponse(response: any, credentials: ExtendedMatrixClientCreds): void;
     abstract persistCredentials(credentials: ExtendedMatrixClientCreds): void;
-    abstract getSecretStorageKey(): Uint8Array | null;
-    abstract createSecretStorageKey(): Uint8Array | null;
+    abstract getSecretStorageKey(): Uint8Array<ArrayBuffer> | null;
+    abstract createSecretStorageKey(): Uint8Array<ArrayBuffer> | null;
     abstract catchAccessSecretStorageError(e: Error): void;
     abstract setupEncryptionNeeded(args: CryptoSetupArgs): boolean;
     /** `getDehydrationKeyCallback` is no longer used; we provide an empty impl for type compatibility. */
-    getDehydrationKeyCallback(): ((keyInfo: SecretStorageKeyDescription, checkFunc: (key: Uint8Array) => void) => Promise<Uint8Array>) | null;
+    getDehydrationKeyCallback(): ((keyInfo: SecretStorageKeyDescription, checkFunc: (key: Uint8Array<ArrayBuffer>) => void) => Promise<Uint8Array<ArrayBuffer>>) | null;
     abstract SHOW_ENCRYPTION_SETUP_UI: boolean;
 }
 export interface CryptoSetupArgs {
@@ -98,9 +98,9 @@ export declare class DefaultCryptoSetupExtensions extends CryptoSetupExtensionsB
     SHOW_ENCRYPTION_SETUP_UI: boolean;
     examineLoginResponse(response: any, credentials: ExtendedMatrixClientCreds): void;
     persistCredentials(credentials: ExtendedMatrixClientCreds): void;
-    getSecretStorageKey(): Uint8Array | null;
-    createSecretStorageKey(): Uint8Array | null;
+    getSecretStorageKey(): Uint8Array<ArrayBuffer> | null;
+    createSecretStorageKey(): Uint8Array<ArrayBuffer> | null;
     catchAccessSecretStorageError(e: Error): void;
     setupEncryptionNeeded(args: CryptoSetupArgs): boolean;
-    getDehydrationKeyCallback(): ((keyInfo: SecretStorageKeyDescription, checkFunc: (key: Uint8Array) => void) => Promise<Uint8Array>) | null;
+    getDehydrationKeyCallback(): ((keyInfo: SecretStorageKeyDescription, checkFunc: (key: Uint8Array<ArrayBuffer>) => void) => Promise<Uint8Array<ArrayBuffer>>) | null;
 }
